# This workflow will install Python dependencies, run tests and lint with a single version of Python

name: Python pull request validation
run-name: Python pull request validation

on:
  pull_request:
    branches:
      - main
      - staging
      - testing

permissions:
  contents: read

jobs:
  install-dependencies-poetry:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT

      - name: Cache Python Packages poetry
        id: cache-python-poetry
        uses: actions/cache@v3
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-
            ${{ runner.os }}-

      - name: Install poetry packages
        if: ${{ steps.cache-python-poetry.outputs.cache-hit != 'true'}}
        id: check-dependencies-poetry
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov pytest-custom_exit_code poetry
          poetry config virtualenvs.create false && poetry install --no-interaction --no-ansi

      - name: List pip packages
        if: ${{ steps.cache-python-poetry.outputs.cache-hit != 'true' }}
        run: echo "Cache Hit Status - ${{ steps.cache-python-poetry.outputs.cache-hit }}"; poetry show

  flake8-lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          path: map_my_world